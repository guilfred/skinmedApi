// @ts-nocheck
/* eslint-disable */
// --------------------------------------------------
// This file is auto-generated by Tuyau. Do not edit manually !
// --------------------------------------------------

import type { MakeTuyauRequest, MakeTuyauResponse } from '@tuyau/utils/types'
import type { InferInput } from '@vinejs/vine/types'

type ApiFinanceursGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/financeur_controller.ts').default['index'], false>
}
type ApiFinanceursPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/financeur_validator.ts')['UpdateFinanceurValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/financeur_controller.ts').default['store'], true>
}
type ApiFinanceursIdPut = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/financeur_validator.ts')['CheckFinanceurIDValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/financeur_controller.ts').default['edit'], true>
}
type ApiFinanceursIdGetHead = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/financeur_validator.ts')['CheckFinanceurIDValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/financeur_controller.ts').default['view'], true>
}
type ApiRdvsRdvclientsStepcreatesPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/rdv_client_validator.ts')['createRdvFromClientAgentAttachValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/rdv_client_controller.ts').default['createRdvFromClientAndAgentAttach'], true>
}
type ApiRdvsRdvclientsGetHead = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/rdv_client_validator.ts')['GetAgentByTypeValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/rdv_client_controller.ts').default['index'], true>
}
type ApiRdvsRdvclientsIdGetHead = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/rdv_client_validator.ts')['CheckRdvIDValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/rdv_client_controller.ts').default['viewRdvClient'], true>
}
type ApiRdvsRdvclientsRdvatIdPut = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/rdv_client_validator.ts')['CheckRdvIDValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/rdv_client_controller.ts').default['editRdvAgentDateRdv'], true>
}
type ApiRdvsRdvclientsCrenauagentsIdPut = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/rdv_client_validator.ts')['CheckRdvIDValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/rdv_client_controller.ts').default['editRdvCreneauAndProfileAgentAndStateToClient'], true>
}
type ApiRdvsRdvagentsGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/rdv_agent_controller.ts').default['index'], false>
}
type ApiRdvsRdvagentsInstallationslistGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/rdv_agent_controller.ts').default['getListRdvInstallation'], false>
}
type ApiRdvsRdvagentsPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/rdv_agent_validator.ts')['createRdvInstallationValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/rdv_agent_controller.ts').default['createRdvInstallation'], true>
}
type ApiRdvsRdvagentsUpdatestatusIdPut = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/rdv_client_validator.ts')['CheckRdvIDValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/rdv_agent_controller.ts').default['editRdvByAgent'], true>
}
type ApiRdvsRdvagentsRdvatcreneauIdPut = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/rdv_client_validator.ts')['CheckRdvIDValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/rdv_agent_controller.ts').default['editRdvAgentDateRdv'], true>
}
type ApiRdvsRdvagentsUpdatecreneauIdPut = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/rdv_client_validator.ts')['CheckRdvIDValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/rdv_agent_controller.ts').default['editRdvCreneau'], true>
}
type ApiRdvsRdvagentsUpdateinstallationIdPut = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/rdv_client_validator.ts')['CheckRdvIDValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/rdv_agent_controller.ts').default['updateRdvInstallation'], true>
}
type ApiRdvsRdvagentsViewinstallationIdGetHead = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/rdv_client_validator.ts')['CheckRdvIDValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/rdv_agent_controller.ts').default['viewRdvAgentInstallation'], true>
}
type ApiRdvsRdvagentsUpdatestatesIdPut = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/rdv_client_validator.ts')['CheckRdvIDValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/rdv_agent_controller.ts').default['updateStateRdv'], true>
}
type ApiRdvsRdvagentsCurrentagentGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/rdv_agent_controller.ts').default['getRdvByCurrentAgent'], false>
}
type ApiClientsInterestedGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/client_controller.ts').default['getClientsInteresed'], false>
}
type ApiClientsNotinterestedGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/client_controller.ts').default['getClientsNotInteresed'], false>
}
type ApiClientsIdGetHead = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/client_validator.ts')['CheckClientIDValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/client_controller.ts').default['view'], true>
}
type ApiClientsEditcontractIdPut = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/client_validator.ts')['CheckClientIDValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/client_controller.ts').default['editContract'], true>
}
type ApiClientsEditinformationIdPut = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/client_validator.ts')['CheckClientIDValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/client_controller.ts').default['editClientInformation'], true>
}
type ApiClientsPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/client_validator.ts')['AddClientValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/client_controller.ts').default['store'], true>
}
type ApiClientsScanfilesIdPut = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/client_validator.ts')['CheckClientIDValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/client_controller.ts').default['scanFiles'], true>
}
type ApiSecurityCreateaccsecretountsPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/security_validators.ts')['createAccountValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/security/create_account_controller.ts').default['createAccount'], true>
}
type ApiSecurityListeaccountsGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/security/list_account_controller.ts').default['listeBySuperAdmin'], false>
}
type ApiSecurityListeadminaccountsGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/security/list_account_controller.ts').default['listeByAdmin'], false>
}
type ApiSecurityUpdateavatarsPut = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/security_validators.ts')['avatarCurrentUserValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/security/profile_controller.ts').default['updateAvatar'], true>
}
type ApiSecurityRemoveavatarsPost = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/security/profile_controller.ts').default['removeAvatar'], false>
}
type ApiSecurityUpdateprofilesPut = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/security_validators.ts')['updateProfileValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/security/profile_controller.ts').default['updateProfile'], true>
}
type ApiAuthPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/security_validators.ts')['AuthenticationValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/security/authentication_controller.ts').default['authentication'], true>
}
type ApiMeGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/security/authentication_controller.ts').default['currentUser'], false>
}
type ApiLogoutPost = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/security/logout_controller.ts').default['logout'], false>
}
type ApiAgentsGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/agent_controller.ts').default['index'], false>
}
type ApiAgentsIdGetHead = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/agent_validator.ts')['CheckAgentIDValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/agent_controller.ts').default['getAgent'], true>
}
type ApiTimeslotsGetHead = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/booking_validator.ts')['CheckAvailableDateValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/booking_controller.ts').default['getAvailableBooking'], true>
}
type ApiTimeslotsPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/booking_validator.ts')['CreateBookingValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/booking_controller.ts').default['store'], true>
}
type ApiTimeslotsDetachPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/booking_validator.ts')['DetachBookingValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/booking_controller.ts').default['detach'], true>
}
type ApiTimeslotsDetachfromPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/booking_validator.ts')['DetachFromDropBookingValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/booking_controller.ts').default['detachFromDrop'], true>
}
type ApiAvoirsByclientIdGetHead = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/avoir_validator.ts')['getClientIDFromAvoirValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/avoir_controller.ts').default['getAvoirsByClient'], true>
}
type ApiAvoirsPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/avoir_validator.ts')['createAvoirValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/avoir_controller.ts').default['store'], true>
}
type ApiAvoirsIdDelete = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/avoir_validator.ts')['getAvoirIDValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/avoir_controller.ts').default['destroy'], true>
}
type ApiAvoirsIdPut = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/avoir_validator.ts')['getAvoirIDValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/avoir_controller.ts').default['edit'], true>
}
type ApiAvoirsIdGetHead = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/avoir_validator.ts')['getAvoirIDValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/avoir_controller.ts').default['view'], true>
}
export interface ApiDefinition {
  'api': {
    'financeurs': {
      '$url': {
      };
      '$get': ApiFinanceursGetHead;
      '$head': ApiFinanceursGetHead;
      '$post': ApiFinanceursPost;
      ':id': {
        '$url': {
        };
        '$put': ApiFinanceursIdPut;
        '$get': ApiFinanceursIdGetHead;
        '$head': ApiFinanceursIdGetHead;
      };
    };
    'rdvs': {
      'rdv_clients': {
        'step_creates': {
          '$url': {
          };
          '$post': ApiRdvsRdvclientsStepcreatesPost;
        };
        '$url': {
        };
        '$get': ApiRdvsRdvclientsGetHead;
        '$head': ApiRdvsRdvclientsGetHead;
        ':id': {
          '$url': {
          };
          '$get': ApiRdvsRdvclientsIdGetHead;
          '$head': ApiRdvsRdvclientsIdGetHead;
        };
        'rdvAt': {
          ':id': {
            '$url': {
            };
            '$put': ApiRdvsRdvclientsRdvatIdPut;
          };
        };
        'crenau_agents': {
          ':id': {
            '$url': {
            };
            '$put': ApiRdvsRdvclientsCrenauagentsIdPut;
          };
        };
      };
      'rdv_agents': {
        '$url': {
        };
        '$get': ApiRdvsRdvagentsGetHead;
        '$head': ApiRdvsRdvagentsGetHead;
        'installations_list': {
          '$url': {
          };
          '$get': ApiRdvsRdvagentsInstallationslistGetHead;
          '$head': ApiRdvsRdvagentsInstallationslistGetHead;
        };
        '$post': ApiRdvsRdvagentsPost;
        'update_status': {
          ':id': {
            '$url': {
            };
            '$put': ApiRdvsRdvagentsUpdatestatusIdPut;
          };
        };
        'rdv_at_creneau': {
          ':id': {
            '$url': {
            };
            '$put': ApiRdvsRdvagentsRdvatcreneauIdPut;
          };
        };
        'update_creneau': {
          ':id': {
            '$url': {
            };
            '$put': ApiRdvsRdvagentsUpdatecreneauIdPut;
          };
        };
        'update_installation': {
          ':id': {
            '$url': {
            };
            '$put': ApiRdvsRdvagentsUpdateinstallationIdPut;
          };
        };
        'view_installation': {
          ':id': {
            '$url': {
            };
            '$get': ApiRdvsRdvagentsViewinstallationIdGetHead;
            '$head': ApiRdvsRdvagentsViewinstallationIdGetHead;
          };
        };
        'update_states': {
          ':id': {
            '$url': {
            };
            '$put': ApiRdvsRdvagentsUpdatestatesIdPut;
          };
        };
        'current_agent': {
          '$url': {
          };
          '$get': ApiRdvsRdvagentsCurrentagentGetHead;
          '$head': ApiRdvsRdvagentsCurrentagentGetHead;
        };
      };
    };
    'clients': {
      'interested': {
        '$url': {
        };
        '$get': ApiClientsInterestedGetHead;
        '$head': ApiClientsInterestedGetHead;
      };
      'not_interested': {
        '$url': {
        };
        '$get': ApiClientsNotinterestedGetHead;
        '$head': ApiClientsNotinterestedGetHead;
      };
      ':id': {
        '$url': {
        };
        '$get': ApiClientsIdGetHead;
        '$head': ApiClientsIdGetHead;
      };
      'edit_contract': {
        ':id': {
          '$url': {
          };
          '$put': ApiClientsEditcontractIdPut;
        };
      };
      'edit_information': {
        ':id': {
          '$url': {
          };
          '$put': ApiClientsEditinformationIdPut;
        };
      };
      '$url': {
      };
      '$post': ApiClientsPost;
      'scan_files': {
        ':id': {
          '$url': {
          };
          '$put': ApiClientsScanfilesIdPut;
        };
      };
    };
    'security': {
      'create_accsecretounts': {
        '$url': {
        };
        '$post': ApiSecurityCreateaccsecretountsPost;
      };
      'liste_accounts': {
        '$url': {
        };
        '$get': ApiSecurityListeaccountsGetHead;
        '$head': ApiSecurityListeaccountsGetHead;
      };
      'liste_admin_accounts': {
        '$url': {
        };
        '$get': ApiSecurityListeadminaccountsGetHead;
        '$head': ApiSecurityListeadminaccountsGetHead;
      };
      'update_avatars': {
        '$url': {
        };
        '$put': ApiSecurityUpdateavatarsPut;
      };
      'remove_avatars': {
        '$url': {
        };
        '$post': ApiSecurityRemoveavatarsPost;
      };
      'update_profiles': {
        '$url': {
        };
        '$put': ApiSecurityUpdateprofilesPut;
      };
    };
    'auth': {
      '$url': {
      };
      '$post': ApiAuthPost;
    };
    'me': {
      '$url': {
      };
      '$get': ApiMeGetHead;
      '$head': ApiMeGetHead;
    };
    'logout': {
      '$url': {
      };
      '$post': ApiLogoutPost;
    };
    'agents': {
      '$url': {
      };
      '$get': ApiAgentsGetHead;
      '$head': ApiAgentsGetHead;
      ':id': {
        '$url': {
        };
        '$get': ApiAgentsIdGetHead;
        '$head': ApiAgentsIdGetHead;
      };
    };
    'time_slots': {
      '$url': {
      };
      '$get': ApiTimeslotsGetHead;
      '$head': ApiTimeslotsGetHead;
      '$post': ApiTimeslotsPost;
      'detach': {
        '$url': {
        };
        '$post': ApiTimeslotsDetachPost;
      };
      'detach_from': {
        '$url': {
        };
        '$post': ApiTimeslotsDetachfromPost;
      };
    };
    'avoirs': {
      'by_client': {
        ':clientId': {
          '$url': {
          };
          '$get': ApiAvoirsByclientIdGetHead;
          '$head': ApiAvoirsByclientIdGetHead;
        };
      };
      '$url': {
      };
      '$post': ApiAvoirsPost;
      ':id': {
        '$url': {
        };
        '$delete': ApiAvoirsIdDelete;
        '$put': ApiAvoirsIdPut;
        '$get': ApiAvoirsIdGetHead;
        '$head': ApiAvoirsIdGetHead;
      };
    };
  };
}
const routes = [
  {
    params: ["*"],
    name: 'drive.fs.serve',
    path: '/uploads/*',
    method: ["GET","HEAD"],
    types: {} as unknown,
  },
] as const;
export const api = {
  routes,
  definition: {} as ApiDefinition
}
